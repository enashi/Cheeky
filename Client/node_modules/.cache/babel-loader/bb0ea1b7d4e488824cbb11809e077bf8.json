{"ast":null,"code":"var _jsxFileName = \"/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/NewPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, getPosts } from '../../Utilitaire/actions/post.actions';\nimport { isEmpty, timestampParser } from '../../Utilitaire/Util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewPostForm = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true); //pour mettre un chargement pendant la charge de la data\n\n  const [message, setMessage] = useState(\"\"); //texte du message\n\n  const [postPicture, setPostPicture] = useState(null);\n  /*on peut avoir des images dans notre post --> front*/\n\n  const [video, setVideo] = useState(''); //pareil pour les vidéos\n\n  const [file, setFile] = useState(); //pour les images --> back\n\n  const userData = useSelector(state => state.userReducer); //charger le contenu de notre store (user et users)\n\n  const error = useSelector(state => state.errorReducer.postError);\n  const dispatch = useDispatch();\n\n  const handlePost = async () => {\n    if (message || postPicture || video) {\n      const data = new FormData(); //stocker le file + texte ...\n\n      data.append('posterId', userData._id);\n      data.append('message', message);\n\n      if (file) {\n        data.append(\"file\", file);\n      }\n\n      data.append('video', video);\n      await dispatch(addPost(data)); // on envoie la data pour faire la requete \n\n      dispatch(getPosts());\n      cancelPost();\n    } else {\n      alert(\"Veuillez entrer un message\");\n    }\n  };\n\n  const handlePicture = e => {\n    setPostPicture(URL.createObjectURL(e.target.files[0])); //on lui passe la photo, pour la prévisualisation de l'image\n\n    setFile(e.target.files[0]); //permet d'envoyer l'image au front\n\n    setVideo(''); //on peut pas avoir de vidéo si on a un deja une image\n  };\n\n  const cancelPost = () => {\n    setMessage('');\n    setPostPicture('');\n    setVideo('');\n    setFile('');\n  };\n\n  useEffect(() => {\n    //si la data est vide alors on fait l'icone de chargement\n    if (!isEmpty(userData)) {\n      setIsLoading(false);\n    }\n\n    const handleVideo = () => {\n      let findLink = message.split(\" \"); //on split notre message des qu'il y a un espace -> permet de detecter les liens youtubes\n\n      for (let i = 0; i < findLink.length; i++) {\n        if (findLink[i].includes('https://www.yout') || findLink[i].includes('https://yout')) {\n          //on regarde si c'est un lien youtube\n          let embed = findLink[i].replace('watch?v=', \"embed/\"); //dans les liens youtubes il ya \"watch\", on replace par embed --> permet d'être lisible dans un lecteur autre que youtube\n\n          setVideo(embed.split('&')[0]); //on split a partir du & et on garde la partie de gauche (c'est le time code généralement )\n\n          findLink.splice(i, 1); //permet de retirer l'url du message\n\n          setMessage(findLink.join(\" \"));\n          setPostPicture('');\n        }\n      }\n    };\n\n    handleVideo();\n  }, [userData, message, video]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner fa-pulse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-right\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"message\",\n              id: \"message\",\n              placeholder: \"Quoi de beau ?\",\n              onChange: e => setMessage(e.target.value),\n              value: message,\n              rows: \"5\",\n              cols: \"60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this), message || postPicture || video.length > 20 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-right\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: postPicture,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 13\n                  }, this), video && /*#__PURE__*/_jsxDEV(\"iframe\", {\n                    src: video,\n                    frameBorder: \"0\",\n                    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                    allowFullScreen: true,\n                    title: video\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 14\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-form\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon\",\n              children: [isEmpty(video) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"./img/icons/picture.svg\",\n                  alt: \"img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"file-upload\",\n                  name: \"file\",\n                  accept: \".jpg, .jpeg, .png\",\n                  onChange: e => handlePicture(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true), video && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setVideo(\"\"),\n                children: \"Supprimer video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-form\",\n          children: [\" \", !isEmpty(error.format) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error.format\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 35\n          }, this), !isEmpty(error.maxSize) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error.maxSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-send\",\n            children: [message || postPicture || video.length > 20 ?\n            /*#__PURE__*/\n\n            /* permet d'afficher le bouton uniquement quand il y a du contenu dedans */\n            _jsxDEV(\"button\", {\n              className: \"cancel\",\n              onClick: cancelPost,\n              children: \"Annuler message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 10\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"send\",\n              onClick: handlePost,\n              children: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NewPostForm, \"pAiFQiRQac1qqshVeElvEU0A/14=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = NewPostForm;\nexport default NewPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/NewPostForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addPost","getPosts","isEmpty","timestampParser","NewPostForm","isLoading","setIsLoading","message","setMessage","postPicture","setPostPicture","video","setVideo","file","setFile","userData","state","userReducer","error","errorReducer","postError","dispatch","handlePost","data","FormData","append","_id","cancelPost","alert","handlePicture","e","URL","createObjectURL","target","files","handleVideo","findLink","split","i","length","includes","embed","replace","splice","join","value","format","maxSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost, getPosts } from '../../Utilitaire/actions/post.actions';\r\nimport { isEmpty, timestampParser } from '../../Utilitaire/Util';\r\n\r\nconst NewPostForm = () => {\r\n\tconst [isLoading, setIsLoading] = useState(true); //pour mettre un chargement pendant la charge de la data\r\n\tconst [message, setMessage] = useState(\"\"); //texte du message\r\n\tconst [postPicture, setPostPicture] = useState(null); /*on peut avoir des images dans notre post --> front*/\r\n\tconst [video, setVideo] = useState(''); //pareil pour les vidéos\r\n\tconst [file, setFile] = useState(); //pour les images --> back\r\n\tconst userData = useSelector((state) => state.userReducer); //charger le contenu de notre store (user et users)\r\n\tconst error = useSelector((state) => state.errorReducer.postError);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handlePost = async () => {\r\n\t\tif (message || postPicture || video) {\r\n\t\t\tconst data = new FormData(); //stocker le file + texte ...\r\n\t\t\tdata.append('posterId', userData._id);\r\n\t\t\tdata.append('message', message);\r\n\t\t\tif (file) {\r\n\t\t\t\tdata.append(\"file\", file);\r\n\t\t\t}\r\n\t\t\tdata.append('video', video);\r\n\r\n\t\t\tawait dispatch(addPost(data)); // on envoie la data pour faire la requete \r\n\t\t\tdispatch(getPosts());\r\n\t\t\tcancelPost();\r\n\r\n\t\t} else {\r\n\t\t\talert(\"Veuillez entrer un message\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePicture = (e) => {\r\n\t\tsetPostPicture(URL.createObjectURL(e.target.files[0])); //on lui passe la photo, pour la prévisualisation de l'image\r\n\t\tsetFile(e.target.files[0]); //permet d'envoyer l'image au front\r\n\t\tsetVideo(''); //on peut pas avoir de vidéo si on a un deja une image\r\n\t};\r\n\r\n\tconst cancelPost = () => {\r\n\t\tsetMessage('');\r\n\t\tsetPostPicture('');\r\n\t\tsetVideo('');\r\n\t\tsetFile('');\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//si la data est vide alors on fait l'icone de chargement\r\n\t\tif (!isEmpty(userData)) {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\r\n\t\tconst handleVideo = () => {\r\n\t\t\tlet findLink = message.split(\" \"); //on split notre message des qu'il y a un espace -> permet de detecter les liens youtubes\r\n\t\t\tfor (let i = 0; i < findLink.length; i++) {\r\n\t\t\t\tif (findLink[i].includes('https://www.yout') || findLink[i].includes('https://yout')) { //on regarde si c'est un lien youtube\r\n\t\t\t\t\tlet embed = findLink[i].replace('watch?v=', \"embed/\"); //dans les liens youtubes il ya \"watch\", on replace par embed --> permet d'être lisible dans un lecteur autre que youtube\r\n\t\t\t\t\tsetVideo(embed.split('&')[0]); //on split a partir du & et on garde la partie de gauche (c'est le time code généralement )\r\n\t\t\t\t\tfindLink.splice(i, 1); //permet de retirer l'url du message\r\n\t\t\t\t\tsetMessage(findLink.join(\" \"));\r\n\t\t\t\t\tsetPostPicture('');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thandleVideo();\r\n\t}, [userData, message, video])\r\n\r\n\treturn (\r\n\t\t<div className=\"post-container\">\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<i className=\"fas fa-spinner fa-pulse\"></i>\r\n\t\t\t) : (\r\n\t\t\t\t<div className='Post'>\r\n\t\t\t\t\t<div className=\"post-form\">\r\n\t\t\t\t\t\t<div className=\"card-container\">\r\n\t\t\t\t\t\t\t<div className=\"card-right\">\r\n\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\t\t\tid=\"message\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Quoi de beau ?\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setMessage(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\t\trows=\"5\"\r\n\t\t\t\t\t\t\t\t\tcols=\"60\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{message || postPicture || video.length > 20 ? (\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-right\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={postPicture} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{video && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={video}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tframeBorder=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tallowFullScreen\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={video}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"footer-form\"> {/*Si on a mis une image alors on peut pas mettre de vidéo et inversement */}\r\n\t\t\t\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t{isEmpty(video) && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"./img/icons/picture.svg\" alt=\"img\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"file-upload\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taccept=\".jpg, .jpeg, .png\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePicture(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{video && (\r\n                  \t\t\t\t\t\t<button onClick={() => setVideo(\"\")}>Supprimer video</button>\r\n                \t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"footer-form\"> {/*Si on a mis une image alors on peut pas mettre de vidéo et inversement */}\r\n\t\t\t\t\t\t\t{!isEmpty(error.format) && <p>{error.format}</p>}\r\n\t\t\t\t\t\t\t{!isEmpty(error.maxSize) && <p>{error.maxSize}</p>}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"btn-send\">\r\n\t\t\t\t\t\t\t\t{message || postPicture || video.length > 20 ? ( /* permet d'afficher le bouton uniquement quand il y a du contenu dedans */\r\n\t\t\t\t\t\t\t\t\t<button className=\"cancel\" onClick={cancelPost}>Annuler message</button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<button className=\"send\" onClick={handlePost}>Envoyer</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}