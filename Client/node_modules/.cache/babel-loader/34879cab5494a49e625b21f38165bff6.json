{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/S6/LU3IN017/cheeky/Client/src/component/Page/Post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Axios from 'axios';\nimport NewCom from './NewCom';\nimport LikeAPost from './LikePost';\nimport Follow from '../Friends/Follow';\nimport DeleteAPost from './DeletePost';\nimport { isEmpty, dateParser } from '../../Utilitaire/Util';\nimport { AllPost, UpdatePost } from '../../Utilitaire/reducers/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  newpost\n}) => {\n  _s();\n\n  const userdata = useSelector(state => state.authReducer.user);\n  const alluser = useSelector(state => state.allusersReducer);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [post, setPost] = useState(null);\n  const [showComments, setShowComments] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleUpdate = async () => {\n    if (post) {\n      await dispatch(UpdatePost(post)).then(() => {\n        Axios({\n          method: \"GET\",\n          url: \"http://localhost:4000/api/post/\",\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"cookie\")\n          }\n        });\n      });\n    }\n\n    setIsUpdated(false);\n  };\n\n  useEffect(() => {\n    !isEmpty(alluser[0]) && setIsLoading(false);\n  }, [alluser]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pseudo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: !isEmpty(alluser[0]) && alluser.map(user => {\n                if (user._id === newpost.author._id) return user.login;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 9\n            }, this), newpost.author._id !== userdata._id && /*#__PURE__*/_jsxDEV(Follow, {\n              userid: newpost.author._id,\n              type: \"card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: dateParser(newpost.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), isUpdated === false && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: newpost.newpost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 31\n        }, this), isUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-newpost\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            defaultValue: newpost.newpost,\n            onChange: e => setPost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: handleUpdate,\n              children: \"Valider modification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }, this), userdata._id === newpost.author._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setIsUpdated(true),\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./img/icons/edit.svg\",\n              alt: \"edit-comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(DeleteAPost, {\n            id: newpost._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./img/icons/message1.svg\",\n              onClick: () => setShowComments(!showComments),\n              alt: \"comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: newpost.comments.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(LikeAPost, {\n            newpost: newpost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./img/icons/share.svg\",\n            alt: \"share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), showComments && /*#__PURE__*/_jsxDEV(NewCom, {\n          newpost: newpost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)\n  }, newpost._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Post, \"MRk/4bMnlKj+NcZvUSkswamD4L8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/macbookair/Desktop/S6/LU3IN017/cheeky/Client/src/component/Page/Post/Post.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Axios","NewCom","LikeAPost","Follow","DeleteAPost","isEmpty","dateParser","AllPost","UpdatePost","Post","newpost","userdata","state","authReducer","user","alluser","allusersReducer","isLoading","setIsLoading","isUpdated","setIsUpdated","post","setPost","showComments","setShowComments","dispatch","handleUpdate","then","method","url","headers","Authorization","localStorage","getItem","map","_id","author","login","createdAt","e","target","value","comments","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Axios from 'axios';\n\n\nimport NewCom from './NewCom';\nimport LikeAPost from './LikePost';\nimport Follow from'../Friends/Follow';\nimport DeleteAPost from './DeletePost';\n\nimport { isEmpty, dateParser } from '../../Utilitaire/Util';\nimport { AllPost, UpdatePost } from '../../Utilitaire/reducers/userActions';\n\nconst Post = ({ newpost }) => {\n\n\tconst userdata = useSelector((state) => state.authReducer.user);\n\tconst alluser = useSelector((state) => state.allusersReducer);\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ isUpdated, setIsUpdated ] = useState(false);\n\tconst [ post, setPost ] = useState(null);\n\tconst [ showComments, setShowComments ] = useState(false);\n\n\tconst dispatch = useDispatch();\n\n\tconst handleUpdate = async () => {\n\t\tif(post) {\n\t\t\tawait dispatch(UpdatePost(post)).then(() => {\n\t\t\t\tAxios({\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\turl: \"http://localhost:4000/api/post/\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: \"Bearer \"+localStorage.getItem(\"cookie\")\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t}\n\t\tsetIsUpdated(false);\n\t};\n\n\tuseEffect(() => {\n\t\t!isEmpty(alluser[0]) && setIsLoading(false);\n\t}, [alluser]);\n\n\treturn (\n\t\t<li className=\"card-container\" key={newpost._id}>\n\t\t\t{isLoading ? (\n\t\t\t\t<i className=\"fas fa-spinner fa-spin\"></i>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"card-right\">\n\t\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t\t<div className=\"pseudo\">\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{!isEmpty(alluser[0]) &&\n\t\t\t\t\t\t\t\t\talluser.map((user) => {\n\t\t\t\t\t\t\t\t\t\tif (user._id === newpost.author._id) return user.login;\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t{newpost.author._id !== userdata._id && (\n\t\t\t\t\t\t\t\t\t<Follow userid={newpost.author._id} type={\"card\"} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span>{dateParser(newpost.createdAt)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{isUpdated === false && <p>{newpost.newpost}</p>}\n\t\t\t\t\t\t{isUpdated && (\n\t\t\t\t\t\t\t<div className=\"update-newpost\">\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tdefaultValue={newpost.newpost}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setPost(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t\t\t\t<button className=\"btn\" onClick={handleUpdate}>\n\t\t\t\t\t\t\t\t\t\tValider modification\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{userdata._id === newpost.author._id && (\n\t\t\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t\t\t<div onClick={() => setIsUpdated(true)}>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t<img src=\"./img/icons/edit.svg\" alt=\"edit-comment\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<DeleteAPost id={newpost._id} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"card-footer\">\n\t\t\t\t\t\t\t<div className=\"comment-icon\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc=\"./img/icons/message1.svg\"\n\t\t\t\t\t\t\t\t\tonClick={() => setShowComments(!showComments)}\n\t\t\t\t\t\t\t\t\talt=\"comment\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span>{newpost.comments.length}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<LikeAPost newpost={newpost} />\n\t\t\t\t\t\t\t<img src=\"./img/icons/share.svg\" alt=\"share\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{showComments && <NewCom newpost={newpost} />}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</li>\n\t)\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}