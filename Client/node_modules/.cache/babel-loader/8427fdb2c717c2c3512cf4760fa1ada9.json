{"ast":null,"code":"var _jsxFileName = \"/Users/ihsaneboubrik/Desktop/L3/S6/LU3IN017/TME/dossier sans titre/cheeky/Client/src/component/Page/Profil/UpdateProfil.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UploadImg from './UploadImg';\nimport { updateBio } from '../../Utilitaire/actions/user.actions';\nimport { dateParser, isEmpty } from '../../Utilitaire/Util';\nimport Follow from './Follow';\nimport Card from \"../Post/Card\";\nimport { UidContext } from \"../../AppContext\";\nimport NavBarProfil from '../../NavBar/NavBarProfil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfil = () => {\n  _s();\n\n  const uid = useContext(UidContext);\n  const userData = useSelector(state => state.userReducer);\n  const usersData = useSelector(state => state.usersReducer);\n  const error = useSelector(state => state.errorReducer.userError);\n  const posts = useSelector(state => state.allPostsReducer);\n  const [bio, setBio] = useState('');\n  const [updateForm, setUpdateForm] = useState(false); //quand on clique sur la bio pour modifier, alors il devient true, et devient un input text\n\n  const dispatch = useDispatch();\n  const [followingPopup, setFollowingPopup] = useState(false);\n  const [followersPopup, setFollowersPopup] = useState(false);\n\n  const handleUpdate = () => {\n    dispatch(updateBio(userData._id, bio));\n    setUpdateForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Profil\",\n    children: [/*#__PURE__*/_jsxDEV(NavBarProfil, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: userData.pseudo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Membre depuis le : \", dateParser(userData.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-part\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Photo de profil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.picture,\n          alt: \"user-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadImg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error.maxSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error.format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bio-update\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), updateForm === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setUpdateForm(!updateForm),\n              children: userData.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setUpdateForm(!updateForm),\n              children: \"Modifier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), updateForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              defaultValue: userData.bio,\n              onChange: e => setBio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdate,\n              children: \"Ok ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => setFollowingPopup(true),\n          children: [\"Abonnements : \", userData.following ? userData.following.length : \"0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => setFollowersPopup(true),\n          children: [\"Abon\\xE9es : \", userData.followers ? userData.followers.length : \"0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), followingPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-profil-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Abonnements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cross\",\n          onClick: () => setFollowingPopup(false),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersData.map(user => {\n            for (let i = 0; i < userData.following.length; i++) {\n              if (user._id === userData.following[i]) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.picture,\n                    alt: \"user-pic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: user.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"follow-handler\",\n                    children: /*#__PURE__*/_jsxDEV(Follow, {\n                      idToFollow: user._id,\n                      type: 'suggestion'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this)]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this);\n              }\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), followersPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-profil-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Abonn\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cross\",\n          onClick: () => setFollowersPopup(false),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersData.map(user => {\n            for (let i = 0; i < userData.followers.length; i++) {\n              if (user._id === userData.followers[i]) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.picture,\n                    alt: \"user-pic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: user.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"follow-handler\",\n                    children: /*#__PURE__*/_jsxDEV(Follow, {\n                      idToFollow: user._id,\n                      type: 'suggestion'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this)]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this);\n              }\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !isEmpty(posts[0]) && posts.map(post => {\n        if (uid === post.posterId) {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            post: post\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfil, \"ICBjc0hAwaVarJKDmzd3SWQ2f+Y=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = UpdateProfil;\nexport default UpdateProfil;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfil\");","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6/LU3IN017/TME/dossier sans titre/cheeky/Client/src/component/Page/Profil/UpdateProfil.js"],"names":["React","useContext","useState","useDispatch","useSelector","UploadImg","updateBio","dateParser","isEmpty","Follow","Card","UidContext","NavBarProfil","UpdateProfil","uid","userData","state","userReducer","usersData","usersReducer","error","errorReducer","userError","posts","allPostsReducer","bio","setBio","updateForm","setUpdateForm","dispatch","followingPopup","setFollowingPopup","followersPopup","setFollowersPopup","handleUpdate","_id","pseudo","createdAt","picture","maxSize","format","e","target","value","following","length","followers","map","user","i","post","posterId"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UploadImg from './UploadImg';\r\nimport { updateBio } from '../../Utilitaire/actions/user.actions';\r\nimport { dateParser, isEmpty } from '../../Utilitaire/Util';\r\nimport Follow from './Follow';\r\nimport Card from \"../Post/Card\";\r\nimport { UidContext } from \"../../AppContext\";\r\nimport NavBarProfil from '../../NavBar/NavBarProfil';\r\n\r\nconst UpdateProfil = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const error = useSelector((state) => state.errorReducer.userError);\r\n  const posts = useSelector((state) => state.allPostsReducer);\r\n\r\n  const [bio, setBio] = useState('');\r\n  const [updateForm, setUpdateForm] = useState(false); //quand on clique sur la bio pour modifier, alors il devient true, et devient un input text\r\n  const dispatch = useDispatch();\r\n\r\n  const [followingPopup, setFollowingPopup] = useState(false);\r\n  const [followersPopup, setFollowersPopup] = useState(false);\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(updateBio(userData._id, bio));\r\n    setUpdateForm(false);\r\n  }\r\n\r\n  return (\r\n    <div id=\"Profil\">\r\n      <NavBarProfil />\r\n\r\n      <h2>{userData.pseudo}</h2>\r\n\r\n      <center><h4>Membre depuis le : {dateParser(userData.createdAt)}</h4></center>\r\n\r\n      <div className=\"update-container\">\r\n        <div className=\"center-part\">\r\n          <h3>Photo de profil</h3>\r\n          <img src={userData.picture} alt=\"user-pic\" />\r\n          <UploadImg />\r\n          <p>{error.maxSize}</p>\r\n          <p>{error.format}</p>\r\n\r\n          <div className=\"bio-update\">\r\n            <br/>\r\n            <h3>Bio</h3>\r\n            {updateForm === false && (\r\n              <>\r\n                <p onClick={() => setUpdateForm(!updateForm)} >{userData.bio}</p>\r\n                <button onClick={() => setUpdateForm(!updateForm)}>Modifier</button>\r\n\r\n              </>\r\n            )}\r\n            {updateForm && (\r\n              <>\r\n                <textarea\r\n                  type=\"text\"\r\n                  defaultValue={userData.bio}\r\n                  onChange={(e) => setBio(e.target.value)}>\r\n                </textarea>\r\n                <button onClick={handleUpdate}>Ok ?</button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <br /><br />\r\n          <h5 onClick={() => setFollowingPopup(true)}>\r\n            Abonnements : {userData.following ? userData.following.length : \"0\"}\r\n          </h5>\r\n          <h5 onClick={() => setFollowersPopup(true)}>\r\n            Abonées : {userData.followers ? userData.followers.length : \"0\"}\r\n          </h5>\r\n        </div>\r\n\r\n      </div>\r\n      {followingPopup && (\r\n        <div className=\"popup-profil-container\">\r\n          <div className=\"modal\">\r\n            <h3>Abonnements</h3>\r\n            <span className=\"cross\" onClick={() => setFollowingPopup(false)}>\r\n              &#10005;\r\n            </span>\r\n            <ul>\r\n              {usersData.map((user) => {\r\n                for (let i = 0; i < userData.following.length; i++) {\r\n                  if (user._id === userData.following[i]) {\r\n                    return (\r\n                      <li key={user._id}>\r\n                        <img src={user.picture} alt=\"user-pic\" />\r\n                        <h4>{user.pseudo}</h4>\r\n                        <div className=\"follow-handler\">\r\n                          <Follow idToFollow={user._id} type={'suggestion'} />\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }\r\n                }\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {followersPopup && (\r\n        <div className=\"popup-profil-container\">\r\n          <div className=\"modal\">\r\n            <h3>Abonnés</h3>\r\n            <span className=\"cross\" onClick={() => setFollowersPopup(false)}>\r\n              &#10005;\r\n            </span>\r\n            <ul>\r\n              {usersData.map((user) => {\r\n                for (let i = 0; i < userData.followers.length; i++) {\r\n                  if (user._id === userData.followers[i]) {\r\n                    return (\r\n                      <li key={user._id}>\r\n                        <img src={user.picture} alt=\"user-pic\" />\r\n                        <h4>{user.pseudo}</h4>\r\n                        <div className=\"follow-handler\">\r\n                          <Follow idToFollow={user._id} type={'suggestion'} />\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }\r\n                }\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n      )}\r\n      <br/><br/>\r\n      <ul>\r\n        {!isEmpty(posts[0]) && posts.map((post) => {\r\n\r\n          if (uid === post.posterId) {\r\n            return (\r\n              <Card post={post} key={post._id} />\r\n            );\r\n          }\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfil;"]},"metadata":{},"sourceType":"module"}