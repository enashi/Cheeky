{"ast":null,"code":"var _jsxFileName = \"/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Profil/Follow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { followUser, unfollowUser } from \"../../Utilitaire/actions/user.actions\";\nimport { isEmpty } from \"../../Utilitaire/Util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FollowHandler = ({\n  idToFollow,\n  type\n}) => {\n  _s();\n\n  //le type permet d'avoir un affichage pour suivre ou unfollow quelqu'un différent. Si c'est un card alors c'est un petit rond, sinon c'est un bouton classique\n  const userData = useSelector(state => state.userReducer);\n  const [isFollowed, setIsFollowed] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleFollow = () => {\n    dispatch(followUser(userData._id, idToFollow));\n    setIsFollowed(true);\n  };\n\n  const handleUnfollow = () => {\n    dispatch(unfollowUser(userData._id, idToFollow));\n    setIsFollowed(false);\n  }; //est appelé à chaque fois, il est relancé dès qu'on a de la userData\n  // en Js on peut pas trop voir quand de la data est la de facon absolue\n  //donc on export une fonction isEmpty qui retourne soit true ou false (true si vide)\n\n\n  useEffect(() => {\n    if (!isEmpty(userData.following)) {\n      //si ce n'est pas vide  alors on lance  la fonction\n      if (userData.following.includes(idToFollow)) {\n        setIsFollowed(true);\n      } else setIsFollowed(false);\n    }\n  }, [userData, idToFollow]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isFollowed && !isEmpty(userData) &&\n    /*#__PURE__*/\n\n    /* On regarde si la data n'est pas vide */\n    _jsxDEV(\"span\", {\n      onClick: handleUnfollow,\n      children: type === \"suggestion\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"unfollow-btn\",\n        children: \"Abonn\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), isFollowed === false && !isEmpty(userData) && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleFollow,\n      children: type === \"suggestion\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"follow-btn\",\n        children: \"Suivre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FollowHandler, \"pkrTJJokSYBGY1rZZs5rw88zPE4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FollowHandler;\nexport default FollowHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowHandler\");","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Profil/Follow.js"],"names":["React","useEffect","useState","useDispatch","useSelector","followUser","unfollowUser","isEmpty","FollowHandler","idToFollow","type","userData","state","userReducer","isFollowed","setIsFollowed","dispatch","handleFollow","_id","handleUnfollow","following","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,uCAAzC;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAAA;;AAAE;AACjD,QAAMC,QAAQ,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA5B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,YAAY,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAACX,UAAU,CAACM,QAAQ,CAACO,GAAV,EAAeT,UAAf,CAAX,CAAR;AACAM,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAHD;;AAKA,QAAMI,cAAc,GAAG,MAAM;AAC5BH,IAAAA,QAAQ,CAACV,YAAY,CAACK,QAAQ,CAACO,GAAV,EAAeT,UAAf,CAAb,CAAR;AACAM,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD,CAV+C,CAe/C;AACA;AACA;;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACM,OAAO,CAACI,QAAQ,CAACS,SAAV,CAAZ,EAAkC;AAAE;AACnC,UAAIT,QAAQ,CAACS,SAAT,CAAmBC,QAAnB,CAA4BZ,UAA5B,CAAJ,EAA6C;AAC5CM,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA,OAFD,MAEOA,aAAa,CAAC,KAAD,CAAb;AACP;AACD,GANQ,EAMN,CAACJ,QAAD,EAAWF,UAAX,CANM,CAAT;AAQG,sBACF;AAAA,eACEK,UAAU,IAAI,CAACP,OAAO,CAACI,QAAD,CAAtB;AAAA;;AAAuC;AACvC;AAAM,MAAA,OAAO,EAAEQ,cAAf;AAAA,gBACET,IAAI,KAAK,YAAT,iBAAyB;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,YAFF,EAQEI,UAAU,KAAK,KAAf,IAAwB,CAACP,OAAO,CAACI,QAAD,CAAhC,iBACA;AAAM,MAAA,OAAO,EAAEM,YAAf;AAAA,gBACEP,IAAI,KAAK,YAAT,iBAAyB;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADE;AAiBH,CA5CD;;GAAMF,a;UACYJ,W,EAEAD,W;;;KAHZK,a;AA8CN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { followUser, unfollowUser } from \"../../Utilitaire/actions/user.actions\";\r\nimport { isEmpty } from \"../../Utilitaire/Util\";\r\n\r\nconst FollowHandler = ({ idToFollow, type }) => { //le type permet d'avoir un affichage pour suivre ou unfollow quelqu'un différent. Si c'est un card alors c'est un petit rond, sinon c'est un bouton classique\r\n\tconst userData = useSelector((state) => state.userReducer);\r\n\tconst [isFollowed, setIsFollowed] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleFollow = () => {\r\n\t\tdispatch(followUser(userData._id, idToFollow));\r\n\t\tsetIsFollowed(true);\r\n\t};\r\n\r\n\tconst handleUnfollow = () => {\r\n\t\tdispatch(unfollowUser(userData._id, idToFollow));\r\n\t\tsetIsFollowed(false);\r\n\t};\r\n\r\n\t//est appelé à chaque fois, il est relancé dès qu'on a de la userData\r\n\t// en Js on peut pas trop voir quand de la data est la de facon absolue\r\n\t//donc on export une fonction isEmpty qui retourne soit true ou false (true si vide)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isEmpty(userData.following)) { //si ce n'est pas vide  alors on lance  la fonction\r\n\t\t\tif (userData.following.includes(idToFollow)) {\r\n\t\t\t\tsetIsFollowed(true);\r\n\t\t\t} else setIsFollowed(false);\r\n\t\t}\r\n\t}, [userData, idToFollow]);\r\n\r\n    return (\r\n\t\t<>\r\n\t\t\t{isFollowed && !isEmpty(userData) && (  /* On regarde si la data n'est pas vide */\r\n\t\t\t\t<span onClick={handleUnfollow}>\r\n\t\t\t\t\t{type === \"suggestion\" && <button className=\"unfollow-btn\">Abonné</button>}\r\n\t\t\t\t\t{/* {type === \"card\" && <img src=\"./img/icons/checked.svg\" alt=\"checked\" />} */}\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t\t{isFollowed === false && !isEmpty(userData) && ( \r\n\t\t\t\t<span onClick={handleFollow}>\r\n\t\t\t\t\t{type === \"suggestion\" && <button className=\"follow-btn\">Suivre</button>}\r\n\t\t\t\t\t{/* {type === \"card\" && <img src=\"./img/icons/check.svg\" alt=\"check\" />} */}\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FollowHandler;"]},"metadata":{},"sourceType":"module"}