{"ast":null,"code":"var _jsxFileName = \"/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/NewPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { addPost, getPosts } from '../../Utilitaire/actions/post.actions';\nimport { isEmpty, timestampParser } from '../../Utilitaire/Util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewPostForm = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true); //pour mettre un chargement pendant la charge de la data\n\n  const [message, setMessage] = useState(\"\"); //texte du message\n\n  const [postPicture, setPostPicture] = useState(null);\n  /*on peut avoir des images dans notre post --> front*/\n\n  const [video, setVideo] = useState(''); //pareil pour les vidéos\n\n  const [file, setFile] = useState(); //pour les images --> back\n\n  const userData = useSelector(state => state.userReducer); //charger le contenu de notre store (user et users)\n\n  const error = useSelector(state => state.errorReducer.postError);\n  const dispatch = useDispatch();\n\n  const handlePost = async () => {\n    if (message || postPicture || video) {\n      const data = new FormData(); //stocker le file + texte ...\n\n      data.append('posterId', userData._id);\n      data.append('message', message);\n\n      if (file) {\n        data.append(\"file\", file);\n      }\n\n      data.append('video', video);\n      await dispatch(addPost(data)); // on envoie la data pour faire la requete \n\n      dispatch(getPosts());\n      cancelPost();\n    } else {\n      alert(\"Veuillez entrer un message\");\n    }\n  };\n\n  const handlePicture = e => {\n    setPostPicture(URL.createObjectURL(e.target.files[0])); //on lui passe la photo, pour la prévisualisation de l'image\n\n    setFile(e.target.files[0]); //permet d'envoyer l'image au front\n\n    setVideo(''); //on peut pas avoir de vidéo si on a un deja une image\n  };\n\n  const cancelPost = () => {\n    setMessage('');\n    setPostPicture('');\n    setVideo('');\n    setFile('');\n  };\n\n  useEffect(() => {\n    //si la data est vide alors on fait l'icone de chargement\n    if (!isEmpty(userData)) {\n      setIsLoading(false);\n    }\n\n    const handleVideo = () => {\n      let findLink = message.split(\" \"); //on split notre message des qu'il y a un espace -> permet de detecter les liens youtubes\n\n      for (let i = 0; i < findLink.length; i++) {\n        if (findLink[i].includes('https://www.yout') || findLink[i].includes('https://yout')) {\n          //on regarde si c'est un lien youtube\n          let embed = findLink[i].replace('watch?v=', \"embed/\"); //dans les liens youtubes il ya \"watch\", on replace par embed --> permet d'être lisible dans un lecteur autre que youtube\n\n          setVideo(embed.split('&')[0]); //on split a partir du & et on garde la partie de gauche (c'est le time code généralement )\n\n          findLink.splice(i, 1); //permet de retirer l'url du message\n\n          setMessage(findLink.join(\" \"));\n          setPostPicture('');\n        }\n      }\n    };\n\n    handleVideo();\n  }, [userData, message, video]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner fa-pulse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-left\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              exact: true,\n              to: \"/profil\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: userData.picture,\n                  width: \"80px\",\n                  height: \"80px\",\n                  alt: \"user-img\"\n                  /*quand on clique sur la photo de l'utilisateur alors on va dans notre profil */\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-right\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"message\",\n              id: \"message\",\n              placeholder: \"Quoi de beau ?\",\n              onChange: e => setMessage(e.target.value),\n              value: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-form\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon\",\n              children: isEmpty(video) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"./img/icons/picture.svg\",\n                  alt: \"img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"file-upload\",\n                  name: \"file\",\n                  accept: \".jpg, .jpeg, .png\",\n                  onChange: e => handlePicture(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), postPicture || video.length > 20 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-left\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData.picture,\n                alt: \"user-pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pseudo\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\" \", userData.pseudo]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: timestampParser(Date.now())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: postPicture,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this), video && /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  src: video,\n                  frameBorder: \"0\",\n                  allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                  allowFullScreen: true,\n                  title: video\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-form\",\n          children: [\" \", !isEmpty(error.format) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error.format\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 56\n          }, this), !isEmpty(error.maxSize) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error.maxSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-send\",\n            children: [message || postPicture || video.length > 20 ?\n            /*#__PURE__*/\n\n            /* permet d'afficher le bouton uniquement quand il y a du contenu dedans */\n            _jsxDEV(\"button\", {\n              className: \"cancel\",\n              onClick: cancelPost,\n              children: \"Annuler message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"send\",\n              onClick: handlePost,\n              children: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPostForm, \"pAiFQiRQac1qqshVeElvEU0A/14=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = NewPostForm;\nexport default NewPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/NewPostForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","addPost","getPosts","isEmpty","timestampParser","NewPostForm","isLoading","setIsLoading","message","setMessage","postPicture","setPostPicture","video","setVideo","file","setFile","userData","state","userReducer","error","errorReducer","postError","dispatch","handlePost","data","FormData","append","_id","cancelPost","alert","handlePicture","e","URL","createObjectURL","target","files","handleVideo","findLink","split","i","length","includes","embed","replace","splice","join","picture","value","pseudo","Date","now","format","maxSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addPost, getPosts } from '../../Utilitaire/actions/post.actions';\r\nimport { isEmpty, timestampParser } from '../../Utilitaire/Util';\r\n\r\nconst NewPostForm = () => {\r\n    const [isLoading, setIsLoading] = useState(true); //pour mettre un chargement pendant la charge de la data\r\n    const [message, setMessage] = useState(\"\"); //texte du message\r\n    const [postPicture, setPostPicture] = useState(null); /*on peut avoir des images dans notre post --> front*/\r\n    const [video, setVideo] = useState(''); //pareil pour les vidéos\r\n    const [file, setFile] = useState(); //pour les images --> back\r\n    const userData = useSelector((state) => state.userReducer); //charger le contenu de notre store (user et users)\r\n    const error = useSelector((state) => state.errorReducer.postError);\r\n    const dispatch = useDispatch();\r\n\r\n    const handlePost = async () => {\r\n        if (message || postPicture || video) {\r\n            const data = new FormData(); //stocker le file + texte ...\r\n            data.append('posterId', userData._id);\r\n            data.append('message', message);\r\n            if (file) {\r\n                data.append(\"file\", file);\r\n            }\r\n            data.append('video', video);\r\n\r\n            await dispatch(addPost(data)); // on envoie la data pour faire la requete \r\n            dispatch(getPosts());\r\n            cancelPost();\r\n\r\n        } else {\r\n            alert(\"Veuillez entrer un message\");\r\n        }\r\n    };\r\n\r\n    const handlePicture = (e) => {\r\n        setPostPicture(URL.createObjectURL(e.target.files[0])); //on lui passe la photo, pour la prévisualisation de l'image\r\n        setFile(e.target.files[0]); //permet d'envoyer l'image au front\r\n        setVideo(''); //on peut pas avoir de vidéo si on a un deja une image\r\n    };\r\n\r\n    const cancelPost = () => {\r\n        setMessage('');\r\n        setPostPicture('');\r\n        setVideo('');\r\n        setFile('');\r\n    };\r\n\r\n    useEffect(() => {\r\n        //si la data est vide alors on fait l'icone de chargement\r\n        if (!isEmpty(userData)) {\r\n            setIsLoading(false);\r\n        }\r\n\r\n        const handleVideo = () => {\r\n            let findLink = message.split(\" \"); //on split notre message des qu'il y a un espace -> permet de detecter les liens youtubes\r\n            for (let i = 0; i < findLink.length; i++) {\r\n                if (findLink[i].includes('https://www.yout') || findLink[i].includes('https://yout')) { //on regarde si c'est un lien youtube\r\n                    let embed = findLink[i].replace('watch?v=', \"embed/\"); //dans les liens youtubes il ya \"watch\", on replace par embed --> permet d'être lisible dans un lecteur autre que youtube\r\n                    setVideo(embed.split('&')[0]); //on split a partir du & et on garde la partie de gauche (c'est le time code généralement )\r\n                    findLink.splice(i, 1); //permet de retirer l'url du message\r\n                    setMessage(findLink.join(\" \"));\r\n                    setPostPicture('');\r\n                }\r\n            }\r\n        }\r\n\r\n        handleVideo();\r\n    }, [userData, message, video])\r\n\r\n    return (\r\n        <div className=\"post-container\">\r\n            {isLoading ? (\r\n                <i className=\"fas fa-spinner fa-pulse\"></i>\r\n            ) : (\r\n                <>\r\n                    <div className=\"post-form\">\r\n                        <div className=\"card-container\">\r\n\r\n                            <div className=\"card-left\">\r\n                                <NavLink exact to=\"/profil\">\r\n                                    <div className=\"user-info\">\r\n                                        <img src={userData.picture} width=\"80px\" height=\"80px\" alt=\"user-img\" /*quand on clique sur la photo de l'utilisateur alors on va dans notre profil */ />\r\n                                    </div>\r\n                                </NavLink>\r\n                            </div>\r\n\r\n                            <div className=\"card-right\">\r\n                                <textarea\r\n                                    name=\"message\"\r\n                                    id=\"message\"\r\n                                    placeholder=\"Quoi de beau ?\"\r\n                                    onChange={(e) => setMessage(e.target.value)}\r\n                                    value={message}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"footer-form\"> {/*Si on a mis une image alors on peut pas mettre de vidéo et inversement */}\r\n                            <div className=\"icon\">\r\n                                {isEmpty(video) && (\r\n                                    <>\r\n\r\n                                        <img src=\"./img/icons/picture.svg\" alt=\"img\" />\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            id=\"file-upload\"\r\n                                            name=\"file\"\r\n                                            accept=\".jpg, .jpeg, .png\"\r\n                                            onChange={(e) => handlePicture(e)}\r\n                                        />\r\n\r\n                                    </>\r\n\r\n                                )}\r\n\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {postPicture || video.length > 20 ? (\r\n                            <li><div className=\"card-container\">\r\n                                <div className=\"card-left\">\r\n                                    <img src={userData.picture} alt=\"user-pic\" />\r\n                                </div>\r\n                                <div className=\"card-right\">\r\n                                    <div className=\"card-header\">\r\n                                        <div className=\"pseudo\">\r\n                                            <h3> {userData.pseudo}</h3>\r\n                                        </div>\r\n                                        <span>{timestampParser(Date.now())}</span>\r\n                                    </div>\r\n                                    <div className=\"content\">\r\n\r\n                                        <img src={postPicture} alt=\"\" />\r\n                                        {video && (\r\n                                            <iframe\r\n                                                src={video}\r\n                                                frameBorder=\"0\"\r\n                                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                allowFullScreen\r\n                                                title={video}\r\n                                            ></iframe>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </li>\r\n                        ) : null}\r\n\r\n                        <div className=\"footer-form\"> {/*Si on a mis une image alors on peut pas mettre de vidéo et inversement */}\r\n\r\n                            {!isEmpty(error.format) && <p>{error.format}</p>}\r\n                            {!isEmpty(error.maxSize) && <p>{error.maxSize}</p>}\r\n                            <div className=\"btn-send\">\r\n                                {message || postPicture || video.length > 20 ? ( /* permet d'afficher le bouton uniquement quand il y a du contenu dedans */\r\n                                    <button className=\"cancel\" onClick={cancelPost}>Annuler message</button>\r\n                                ) : null}\r\n\r\n                                <button className=\"send\" onClick={handlePost}>Envoyer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}