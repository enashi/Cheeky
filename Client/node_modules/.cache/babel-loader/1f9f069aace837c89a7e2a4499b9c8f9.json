{"ast":null,"code":"var _jsxFileName = \"/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/EditDeleteComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteComment, editComment } from '../../Utilitaire/actions/post.actions';\nimport { UidContext } from '../../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeleteComment = ({\n  comment,\n  postId\n}) => {\n  _s();\n\n  const [isAuthor, setIsAuthor] = useState(false); //permet de voir si on est auteur du commentaire\n\n  const [edit, setEdit] = useState(false);\n  const [text, setText] = useState('');\n  const uid = useContext(UidContext); //on récupère que l'id de notre utilisateur\n\n  const dispatch = useDispatch(); //permet d'envoyer l'action\n\n  const handleEdit = e => {\n    e.preventDefault();\n\n    if (text) {\n      dispatch(editComment(postId, comment._id, text));\n      setText('');\n      setEdit(false);\n    }\n  };\n\n  const handleDelete = () => dispatch(deleteComment(postId, comment._id));\n\n  useEffect(() => {\n    //on vérifie si on est l'auteur du commentaire\n    const checkAuthor = () => {\n      if (uid === comment.commenterId) {\n        setIsAuthor(true);\n      }\n    };\n\n    checkAuthor();\n  }, [uid, comment.commenterId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-comment\",\n    children: [isAuthor && edit === false &&\n    /*#__PURE__*/\n\n    /*On regarde si on est l'auteur et que edit = false alors on change pour qu'on puisse cliquer et edit */\n    _jsxDEV(\"span\", {\n      onClick: () => setEdit(!edit),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./img/icons/edit.svg\",\n        width: \"20px\",\n        height: \"20px\",\n        alt: \"edit-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), isAuthor && edit && /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleEdit,\n      className: \"edit-comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        /*Ca devient un input de type text pour qu'on puisse écrire dedans et faire les modifs */\n        type: \"text\",\n        name: \"text\",\n        onChange: e => setText(e.target.value),\n        defaultValue: comment.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            if (window.confirm(\"Voulez-vous vraiment supprimer ce commentaire?\")) {\n              handleDelete();\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./img/icons/trash.svg\",\n            width: \"20px\",\n            height: \"20px\",\n            alt: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Valider modification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          onClick: () => setEdit(!edit),\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EditDeleteComment, \"f6wpi0z+DWpKemz8D3ENbYLBINk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditDeleteComment;\nexport default EditDeleteComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeleteComment\");","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/EditDeleteComment.js"],"names":["React","useContext","useEffect","useState","useDispatch","deleteComment","editComment","UidContext","EditDeleteComment","comment","postId","isAuthor","setIsAuthor","edit","setEdit","text","setText","uid","dispatch","handleEdit","e","preventDefault","_id","handleDelete","checkAuthor","commenterId","target","value","window","confirm"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteComment, editComment } from '../../Utilitaire/actions/post.actions';\r\nimport { UidContext } from '../../AppContext';\r\n\r\nconst EditDeleteComment = ({ comment, postId}) => {\r\n\tconst [isAuthor, setIsAuthor] = useState(false); //permet de voir si on est auteur du commentaire\r\n\tconst [edit, setEdit] = useState(false);\r\n\tconst [text, setText] = useState('');\r\n\tconst uid = useContext(UidContext); //on récupère que l'id de notre utilisateur\r\n\tconst dispatch = useDispatch(); //permet d'envoyer l'action\r\n\r\n\tconst handleEdit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif(text){\r\n\t\t\tdispatch(editComment(postId, comment._id, text));\r\n\t\t\tsetText('');\r\n\t\t\tsetEdit(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDelete = () => dispatch(deleteComment(postId, comment._id));\r\n\r\n\tuseEffect(() => {\r\n\t\t//on vérifie si on est l'auteur du commentaire\r\n\t\tconst checkAuthor = () => {\r\n\t\t\tif (uid === comment.commenterId){\r\n\t\t\t\tsetIsAuthor(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcheckAuthor();\r\n\t}, [uid, comment.commenterId]);\r\n\r\n\treturn (\r\n\t\t<div className=\"edit-comment\">\r\n\t\t\t{isAuthor && edit === false && ( /*On regarde si on est l'auteur et que edit = false alors on change pour qu'on puisse cliquer et edit */\r\n\t\t\t\t<span onClick={() => setEdit(!edit)}>\r\n\t\t\t\t\t<img src=\"./img/icons/edit.svg\"  width=\"20px\" height=\"20px\" alt=\"edit-comment\"/>\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t\t{isAuthor && edit && (\r\n\t\t\t\t<form action=\"\" onSubmit={handleEdit} className=\"edit-comment-form\">\r\n\t\t\t\t\t<br/> \r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t/*Ca devient un input de type text pour qu'on puisse écrire dedans et faire les modifs */ \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tname=\"text\" \r\n\t\t\t\t\t\tonChange={(e) => setText(e.target.value)} \r\n\t\t\t\t\t\tdefaultValue={comment.text}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div className=\"btn\">\r\n\t\t\t\t\t\t<span onClick={() => {\r\n\t\t\t\t\t\t\tif(window.confirm(\"Voulez-vous vraiment supprimer ce commentaire?\")){\r\n\t\t\t\t\t\t\t\t\thandleDelete();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<img src=\"./img/icons/trash.svg\" width=\"20px\" height=\"20px\" alt=\"delete\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Valider modification\" />\r\n\t\t\t\t\t\t<label htmlFor=\"text\" onClick={() => setEdit(!edit)}>\r\n\t\t\t\t\t\t\t<h4>Annuler</h4>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditDeleteComment;"]},"metadata":{},"sourceType":"module"}