{"ast":null,"code":"var _jsxFileName = \"/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/LikeButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UidContext } from \"../../AppContext\";\nimport Popup from 'reactjs-popup'; //petite librairie qui gère les popups\n\nimport 'reactjs-popup/dist/index.css';\nimport { useDispatch } from 'react-redux';\nimport { likePost, unlikePost } from '../../Utilitaire/actions/post.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LikeButton = ({\n  post\n}) => {\n  _s();\n\n  const [liked, setLiked] = useState(false); //pour voir si c'est liké de base ou non (ici non)\n\n  const uid = useContext(UidContext); //on récupère seulement l'uid de notre utilisateur\n\n  const dispatch = useDispatch(); // pour lancer notre fonction\n\n  const like = () => {\n    dispatch(likePost(post._id, uid));\n    setLiked(true);\n  };\n\n  const unlike = () => {\n    dispatch(unlikePost(post._id, uid));\n    setLiked(false);\n  };\n\n  useEffect(() => {\n    if (post.likers.includes(uid)) setLiked(true); //on regarde si l'id de notre utilisateur est dans le tableau des likes du post\n    else setLiked(false);\n  }, [uid, post.likers, liked]); //on lance quand on récup le uid, et on le relance quand on a la tableau des posts et quand on like\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"liked-container\",\n    children: [uid === null &&\n    /*#__PURE__*/\n\n    /*Si on est pas connecté alors on peut pas like le post */\n    _jsxDEV(Popup, {\n      trigger: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./img/icons/heart.svg\",\n        alt: \"like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this),\n      position: ['bottom center', 'bottom right', 'bottom left'],\n      closeOnDocumentClick: true,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Connectez-vous pour pouvoir aimer ce post ! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), uid && liked === false && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./img/icons/heart.svg\",\n      onClick: like,\n      alt: \"like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), uid && liked && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./img/icons/heart-filled.svg\",\n      onClick: unlike,\n      alt: \"unlike\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: post.likers.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LikeButton, \"8gHQf214N4xDUUQVyIcuMJlLdF0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LikeButton;\nexport default LikeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LikeButton\");","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Page/Post/LikeButton.js"],"names":["React","useContext","useEffect","useState","UidContext","Popup","useDispatch","likePost","unlikePost","LikeButton","post","liked","setLiked","uid","dispatch","like","_id","unlike","likers","includes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CAAmC;;AACnC,OAAO,8BAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uCAArC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC,CAD2B,CACgB;;AAC3C,QAAMU,GAAG,GAAGZ,UAAU,CAACG,UAAD,CAAtB,CAF2B,CAES;;AACpC,QAAMU,QAAQ,GAAGR,WAAW,EAA5B,CAH2B,CAGK;;AAEhC,QAAMS,IAAI,GAAG,MAAM;AACfD,IAAAA,QAAQ,CAACP,QAAQ,CAACG,IAAI,CAACM,GAAN,EAAWH,GAAX,CAAT,CAAR;AACAD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAHD;;AAKA,QAAMK,MAAM,GAAG,MAAM;AACjBH,IAAAA,QAAQ,CAACN,UAAU,CAACE,IAAI,CAACM,GAAN,EAAWH,GAAX,CAAX,CAAR;AACAD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAI,CAACQ,MAAL,CAAYC,QAAZ,CAAqBN,GAArB,CAAJ,EAA+BD,QAAQ,CAAC,IAAD,CAAR,CAA/B,CAA8C;AAA9C,SACKA,QAAQ,CAAC,KAAD,CAAR;AACR,GAHQ,EAGN,CAACC,GAAD,EAAMH,IAAI,CAACQ,MAAX,EAAmBP,KAAnB,CAHM,CAAT,CAf2B,CAkBG;;AAE9B,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,eACKE,GAAG,KAAK,IAAR;AAAA;;AAAgB;AACjB,YAAC,KAAD;AAAO,MAAA,OAAO,eAAE;AAAK,QAAA,GAAG,EAAC,uBAAT;AAAiC,QAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAgE,MAAA,QAAQ,EACpE,CAAC,eAAD,EAAkB,cAAlB,EAAkC,aAAlC,CADJ;AACsD,MAAA,oBAAoB,MAD1E;AAAA,mCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOKA,GAAG,IAAIF,KAAK,KAAK,KAAjB,iBACG;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,OAAO,EAAEI,IAA1C;AAAgD,MAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YARR,EAUKF,GAAG,IAAIF,KAAP,iBACG;AAAK,MAAA,GAAG,EAAC,8BAAT;AAAwC,MAAA,OAAO,EAAEM,MAAjD;AAAyD,MAAA,GAAG,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,YAXR,eAaI;AAAA,gBAAOP,IAAI,CAACQ,MAAL,CAAYE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CArCD;;GAAMX,U;UAGeH,W;;;KAHfG,U;AAuCN,eAAeA,UAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { UidContext } from \"../../AppContext\"; \r\nimport Popup from 'reactjs-popup'; //petite librairie qui gère les popups\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { likePost, unlikePost } from '../../Utilitaire/actions/post.actions';\r\n\r\nconst LikeButton = ({post}) => {\r\n    const [liked, setLiked] = useState(false); //pour voir si c'est liké de base ou non (ici non)\r\n    const uid = useContext(UidContext); //on récupère seulement l'uid de notre utilisateur\r\n    const dispatch = useDispatch(); // pour lancer notre fonction\r\n\r\n    const like = () => {\r\n        dispatch(likePost(post._id, uid))\r\n        setLiked(true);\r\n    }\r\n    \r\n    const unlike = () => {\r\n        dispatch(unlikePost(post._id, uid))\r\n        setLiked(false);\r\n    }\r\n\r\n    useEffect(() => { \r\n        if (post.likers.includes(uid)) setLiked(true) //on regarde si l'id de notre utilisateur est dans le tableau des likes du post\r\n        else setLiked(false)\r\n    }, [uid, post.likers, liked]) //on lance quand on récup le uid, et on le relance quand on a la tableau des posts et quand on like\r\n\r\n    return (\r\n        <div className=\"liked-container\">\r\n            {uid === null && /*Si on est pas connecté alors on peut pas like le post */\r\n            <Popup trigger={<img src=\"./img/icons/heart.svg\" alt=\"like\" />} position={\r\n                ['bottom center', 'bottom right', 'bottom left']} closeOnDocumentClick> {/* dès qu'on clique ailleurs ca ferme la fenetre */}\r\n                <div> Connectez-vous pour pouvoir aimer ce post ! </div>\r\n            </Popup>\r\n            }\r\n            {uid && liked === false && (\r\n                <img src=\"./img/icons/heart.svg\" onClick={like} alt=\"like\" />\r\n            )}\r\n            {uid && liked && (\r\n                <img src=\"./img/icons/heart-filled.svg\" onClick={unlike} alt=\"unlike\" />\r\n            )}\r\n            <span>{post.likers.length}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LikeButton;"]},"metadata":{},"sourceType":"module"}