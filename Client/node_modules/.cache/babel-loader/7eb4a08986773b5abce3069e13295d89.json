{"ast":null,"code":"import axios from \"axios\"; //posts\n\nexport const GET_POSTS = \"GET_POSTS\"; //pour avoir les derniers posts --> permet le scrolling\n\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\"; //on recupère TOUT les postes pour le trend \n\nexport const ADD_POST = \"ADD_POST\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\"; //comments\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\"; //trends\n\nexport const GET_TRENDS = \"GET_TRENDS\"; //errors\n\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\"; //posts\n//pour afficher tout les posts\n\nexport const getPosts = number => {\n  //number c'est pour le nombre  de poste qu'on affiche\n  return dispatch => {\n    return axios.get(`${process.env.REACT_APP_API_URL}api/post/`).then(res => {\n      const array = res.data.slice(0, number); //a partir du premier élement jusqu'a number. On prend donc que 5 messages\n\n      dispatch({\n        type: GET_POSTS,\n        payload: array\n      });\n      dispatch({\n        type: GET_ALL_POSTS,\n        payload: res.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const addPost = data => {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_URL}api/post/`, data).then(res => {\n      if (res.data.errors) {\n        dispatch({\n          type: \"GET_POST_ERRORS\",\n          payload: res.data.errors\n        });\n      } else {\n        dispatch({\n          type: \"GET_POST_ERRORS\",\n          payload: ''\n        }); //s'il n'y a pas d'erreurs alors on met a vide\n      }\n    });\n  };\n};\nexport const likePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: LIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const unlikePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: UNLIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const updatePost = (postId, message) => {\n  return dispatch => {\n    return axios({\n      method: 'put',\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: {\n        message\n      }\n    }).then(res => {\n      dispatch({\n        type: UPDATE_POST,\n        payload: {\n          message,\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deletePost = postId => {\n  return dispatch => {\n    return axios({\n      method: 'delete',\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`\n    }).then(res => {\n      dispatch({\n        type: DELETE_POST,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n}; //comments\n\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\n      data: {\n        commenterId,\n        text,\n        commenterPseudo\n      }\n    }).then(res => {\n      dispatch({\n        type: ADD_COMMENT,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editComment = (postId, commentId, text) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\n      data: {\n        commentId,\n        text\n      }\n    }).then(res => {\n      dispatch({\n        type: EDIT_COMMENT,\n        payload: {\n          postId,\n          commentId,\n          text\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteComment = (postId, commentId) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\n      data: {\n        commentId\n      }\n    }).then(res => {\n      dispatch({\n        type: DELETE_COMMENT,\n        payload: {\n          postId,\n          commentId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const getTrends = sortedArray => {\n  return dispatch => {\n    dispatch({\n      type: GET_TRENDS,\n      payload: sortedArray\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/component/Utilitaire/actions/post.actions.js"],"names":["axios","GET_POSTS","GET_ALL_POSTS","ADD_POST","LIKE_POST","UNLIKE_POST","UPDATE_POST","DELETE_POST","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","GET_TRENDS","GET_POST_ERRORS","getPosts","number","dispatch","get","process","env","REACT_APP_API_URL","then","res","array","data","slice","type","payload","catch","err","console","log","addPost","post","errors","likePost","postId","userId","method","url","id","unlikePost","updatePost","message","deletePost","addComment","commenterId","text","commenterPseudo","editComment","commentId","deleteComment","getTrends","sortedArray"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n//posts\r\nexport const GET_POSTS = \"GET_POSTS\"; //pour avoir les derniers posts --> permet le scrolling\r\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";//on recupère TOUT les postes pour le trend \r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const LIKE_POST = \"LIKE_POST\";\r\nexport const UNLIKE_POST = \"UNLIKE_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\n//comments\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\n\r\n//trends\r\nexport const GET_TRENDS = \"GET_TRENDS\";\r\n\r\n//errors\r\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\";\r\n\r\n//posts\r\n\r\n//pour afficher tout les posts\r\nexport const getPosts = (number) => { //number c'est pour le nombre  de poste qu'on affiche\r\n    return (dispatch) => {\r\n        return (axios)\r\n            .get(`${process.env.REACT_APP_API_URL}api/post/`)\r\n            .then((res) => {\r\n                const array = res.data.slice(0, number) //a partir du premier élement jusqu'a number. On prend donc que 5 messages\r\n                dispatch({ type: GET_POSTS, payload: array });\r\n                dispatch({ type: GET_ALL_POSTS, payload: res.data});\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const addPost = (data) => {\r\n    return (dispatch) => {\r\n        return (axios)\r\n            .post(`${process.env.REACT_APP_API_URL}api/post/`, data)\r\n            .then((res) => {\r\n                if (res.data.errors) {\r\n                    dispatch({ type: \"GET_POST_ERRORS\", payload: res.data.errors })\r\n                } else{\r\n                    dispatch({ type: \"GET_POST_ERRORS\", payload: '' }); //s'il n'y a pas d'erreurs alors on met a vide\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport const likePost = (postId, userId) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: 'patch',\r\n            url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\r\n            data: { id: userId}\r\n        })\r\n        .then((res) => {\r\n            dispatch({ type: LIKE_POST, payload: {postId, userId}});\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const unlikePost = (postId, userId) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: 'patch',\r\n            url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\r\n            data: { id: userId}\r\n        })\r\n        .then((res) => {\r\n            dispatch({ type: UNLIKE_POST, payload: {postId, userId}});\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const updatePost = (postId, message) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: 'put',\r\n            url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\r\n            data: {message},\r\n        })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_POST, payload: {message, postId}\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: 'delete',\r\n            url: `${process.env.REACT_APP_API_URL}api/post/${postId}`\r\n        })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: DELETE_POST, payload: {postId}\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n}\r\n\r\n\r\n//comments\r\n\r\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: 'patch',\r\n            url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\r\n            data: {commenterId, text, commenterPseudo},\r\n        })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: ADD_COMMENT, payload: {postId} \r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n}\r\n\r\nexport const editComment = (postId, commentId, text) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: 'patch',\r\n            url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\r\n            data: {commentId, text},\r\n        })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: EDIT_COMMENT, payload: {postId, commentId, text}\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n}\r\n\r\nexport const deleteComment = (postId, commentId) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: 'patch',\r\n            url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\r\n            data: {commentId},\r\n        })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: DELETE_COMMENT, payload: {postId, commentId}\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n}\r\n\r\n\r\nexport const getTrends = (sortedArray) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: GET_TRENDS, payload: sortedArray});\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}