{"ast":null,"code":"import Axios from 'axios'; // export const getAllUsers = () => {\n// \treturn(dispatch) => { //dispatch c'est ce qu'on va envoyer au reducer\n// \t\treturn Axios.get(\n// \t\t\t'http://localhost:4000/api/user/'\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"All users\", \n// \t\t\t\t\tpayload: res.data \n// \t\t\t\t}); //toute la data qu'on vient de chercher, on la passe au reduxer\n// \t\t})\n// \t\t.catch((err) => console.log( err ));\n// \t};\n// };\n// export const getUser = (id) => {\n// \treturn(dispatch) => { //dispatch c'est ce qu'on va envoyer au reducer\n// \t\treturn Axios.get(\n// \t\t\t`http://localhost:4000/api/user/${id}`\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"User\", \n// \t\t\t\t\tpayload: res.data \n// \t\t\t\t}); //toute la data qu'on vient de chercher, on la passe au reduxer\n// \t\t})\n// \t\t.catch((err) => console.log( err ));\n// \t};\n// };\n// export const updateBio = (id, bio) => {\n// \treturn (dispatch) => {\n// \t\treturn Axios(\n// \t\t\t`http://localhost:4000/api/user/update/${id}`,\n// \t\t\t{\n// \t\t\t\tmethod: \"PUT\",\n// \t\t\t\tdata : {\n// \t\t\t\t\tbio: bio\n// \t\t\t\t}\n// \t\t\t}\n// \t\t)\n// \t\t.then((res) =>{\n// \t\t\tdispatch(\n// \t\t\t{\n// \t\t\t\ttype: \"Update bio\", \n// \t\t\t\tpayload: bio\n// \t\t\t}) //payload : donnée qu'on envoie dans notre store\n// \t\t})\n// \t\t.catch((err) => console.log( err ))\n// \t};\n// };\n// export const followUser = (userid) => {\n// \treturn (dispatch) => {\n// \t\treturn Axios(\n// \t\t \t'http://localhost:4000/api/friend/follow',\n// \t\t \t{\n// \t\t \t\tmethod: \"PATCH\",\n// \t\t \t\tdata: {\n// \t\t\t\t\tuserid: userid\n// \t\t\t\t}\n// \t\t \t}\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"Follow user\", \n// \t\t\t\t\tpayload: { userid }\n// \t\t\t\t});\n// \t\t})\n// \t\t.catch((err) => console.log( err ));\n//   \t};\n// };\n// export const unfollowUser = (userid) => {\n// \treturn (dispatch) => {\n// \t\treturn Axios(\n// \t\t\t'http://localhost:4000/api/friend/unfollow',\n// \t\t\t{\n// \t\t \t\tmethod: \"PATCH\",\n// \t\t \t\tdata: {\n// \t\t\t\t\tuserid: userid\n// \t\t\t\t}\n// \t\t \t}\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"Unfollow user\", \n// \t\t\t\t\tpayload: { userid } \n// \t\t\t\t});\n// \t\t})\n// \t  .catch((err) => console.log( err ));\n//   };\n// };\n\nexport const initialState = null;\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"All users\":\n      return action.payload;\n\n    case \"User\":\n      return action.payload;\n    //Toute la data de res.data qui à été envoyé avec action.payload on incrémente notre initialState\n\n    case \"Update bio\":\n      return { ...state,\n        bio: action.payload\n      };\n\n    case \"Follow user\":\n      return { ...state,\n        abonne: action.payload.abonne\n      };\n\n    case \"Unfollow user\":\n      return { ...state,\n        abonnement: action.payload.abonnement\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/macbookair/Desktop/S6/LU3IN017/cheeky/Client/src/component/Utilitaire/userReducer.js"],"names":["Axios","initialState","reducer","state","action","type","payload","bio","abonne","abonnement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,IAArB;AAEP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACC,aAAOD,MAAM,CAACE,OAAd;;AACD,SAAK,MAAL;AACC,aAAOF,MAAM,CAACE,OAAd;AAAuB;;AACxB,SAAK,YAAL;AACC,aAAO,EACN,GAAGH,KADG;AAENI,QAAAA,GAAG,EAAEH,MAAM,CAACE;AAFN,OAAP;;AAID,SAAK,aAAL;AACC,aAAO,EACN,GAAGH,KADG;AAENK,QAAAA,MAAM,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAFjB,OAAP;;AAID,SAAK,eAAL;AACC,aAAO,EACN,GAAGL,KADG;AAENM,QAAAA,UAAU,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAFrB,OAAP;;AAID;AACA,aAAON,KAAP;AArBD;AAuBA,CAxBM","sourcesContent":["import Axios from 'axios';\n\n// export const getAllUsers = () => {\n// \treturn(dispatch) => { //dispatch c'est ce qu'on va envoyer au reducer\n// \t\treturn Axios.get(\n// \t\t\t'http://localhost:4000/api/user/'\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"All users\", \n// \t\t\t\t\tpayload: res.data \n// \t\t\t\t}); //toute la data qu'on vient de chercher, on la passe au reduxer\n// \t\t})\n// \t\t.catch((err) => console.log( err ));\n// \t};\n// };\n\n// export const getUser = (id) => {\n// \treturn(dispatch) => { //dispatch c'est ce qu'on va envoyer au reducer\n// \t\treturn Axios.get(\n// \t\t\t`http://localhost:4000/api/user/${id}`\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"User\", \n// \t\t\t\t\tpayload: res.data \n// \t\t\t\t}); //toute la data qu'on vient de chercher, on la passe au reduxer\n// \t\t})\n// \t\t.catch((err) => console.log( err ));\n// \t};\n// };\n\n// export const updateBio = (id, bio) => {\n// \treturn (dispatch) => {\n// \t\treturn Axios(\n// \t\t\t`http://localhost:4000/api/user/update/${id}`,\n// \t\t\t{\n// \t\t\t\tmethod: \"PUT\",\n// \t\t\t\tdata : {\n// \t\t\t\t\tbio: bio\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t)\n// \t\t.then((res) =>{\n// \t\t\tdispatch(\n// \t\t\t{\n// \t\t\t\ttype: \"Update bio\", \n// \t\t\t\tpayload: bio\n// \t\t\t}) //payload : donnée qu'on envoie dans notre store\n// \t\t})\n// \t\t.catch((err) => console.log( err ))\n// \t};\n// };\n\n// export const followUser = (userid) => {\n// \treturn (dispatch) => {\n// \t\treturn Axios(\n// \t\t \t'http://localhost:4000/api/friend/follow',\n// \t\t \t{\n// \t\t \t\tmethod: \"PATCH\",\n// \t\t \t\tdata: {\n// \t\t\t\t\tuserid: userid\n// \t\t\t\t}\n// \t\t \t}\n\t\t\t\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"Follow user\", \n// \t\t\t\t\tpayload: { userid }\n// \t\t\t\t});\n// \t\t})\n// \t\t.catch((err) => console.log( err ));\n//   \t};\n// };\n\n// export const unfollowUser = (userid) => {\n// \treturn (dispatch) => {\n// \t\treturn Axios(\n// \t\t\t'http://localhost:4000/api/friend/unfollow',\n// \t\t\t{\n// \t\t \t\tmethod: \"PATCH\",\n// \t\t \t\tdata: {\n// \t\t\t\t\tuserid: userid\n// \t\t\t\t}\n// \t\t \t}\n// \t\t)\n// \t\t.then((res) => {\n// \t\t\tdispatch(\n// \t\t\t\t{ \n// \t\t\t\t\ttype: \"Unfollow user\", \n// \t\t\t\t\tpayload: { userid } \n// \t\t\t\t});\n// \t\t})\n// \t  .catch((err) => console.log( err ));\n//   };\n// };\n\nexport const initialState = null;\n\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"All users\":\n\t\t\treturn action.payload;\n\t\tcase \"User\":\n\t\t\treturn action.payload; //Toute la data de res.data qui à été envoyé avec action.payload on incrémente notre initialState\n\t\tcase \"Update bio\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbio: action.payload,\n\t\t\t};\n\t\tcase \"Follow user\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tabonne: action.payload.abonne,\n\t\t\t};\n\t\tcase \"Unfollow user\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tabonnement: action.payload.abonnement,\n\t\t\t};\n\t\tdefault:\n\t\treturn state;\n\t}\n}; \n"]},"metadata":{},"sourceType":"module"}