{"ast":null,"code":"import Axios from 'axios';\nexport const ALLUSER = \"All users\";\nexport const getAllUsers = () => {\n  return dispatch => {\n    //dispatch c'est ce qu'on va envoyer au reducer\n    return Axios({\n      method: \"GET\",\n      url: 'http://localhost:4000/api/user/all',\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getITem(\"cookie\")\n      }\n    }).then(res => {\n      dispatch({\n        type: \"All users\",\n        payload: res.data\n      }); //toute la data qu'on vient de chercher, on la passe au reduxer\n\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/Users/macbookair/Desktop/S6/LU3IN017/cheeky/Client/src/component/Utilitaire/reducers/allusersAction.js"],"names":["Axios","ALLUSER","getAllUsers","dispatch","method","url","headers","Authorization","localStorage","getITem","then","res","type","payload","data","console","log","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,WAAhB;AAEP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAChC,SAAOC,QAAD,IAAc;AAAE;AACrB,WAAOH,KAAK,CAAC;AACZI,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAE,oCAFO;AAGZC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAE,YAAUC,YAAY,CAACC,OAAb,CAAqB,QAArB;AADjB;AAHG,KAAD,CAAL,CAONC,IAPM,CAOAC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAAC;AACRS,QAAAA,IAAI,EAAE,WADE;AAERC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFL,OAAD,CAAR,CADc,CAIV;;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;AACA,KAbM,EAcNG,KAdM,CAcCC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAaE,GAAb,CAdT,CAAP;AAeA,GAhBD;AAiBA,CAlBM","sourcesContent":["import Axios from 'axios';\n\nexport const ALLUSER = \"All users\";\n\nexport const getAllUsers = () => {\n\treturn(dispatch) => { //dispatch c'est ce qu'on va envoyer au reducer\n\t\treturn Axios({\n\t\t\tmethod: \"GET\",\n\t\t\turl: 'http://localhost:4000/api/user/all',\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \"+localStorage.getITem(\"cookie\")\n\t\t\t}\n\t\t})\n\t\t.then((res) => {\n\t\t\tdispatch({ \n\t\t\t\ttype: \"All users\", \n\t\t\t\tpayload: res.data \n\t\t\t}); //toute la data qu'on vient de chercher, on la passe au reduxer\n\t\t\tconsole.log(res.data);\n\t\t})\n\t\t.catch((err) => console.log( err ));\n\t};\n};"]},"metadata":{},"sourceType":"module"}