{"ast":null,"code":"var _jsxFileName = \"/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { UidContext } from './component/AppContext';\nimport NavigationPanel from './component/NavigationPanel';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from './component/Utilitaire/actions/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [uid, setUid] = useState(null); //permet de vérifier l'authentification d'un utilisateur --> token , cookie\n  //des qu'on arrive sur notre application, a chaque fois qu'on va appeler le components, ca va lancer useEffect qui controle le token de l'utilisateur\n\n  const dispatch = useDispatch(); //perme d'envoyer l'action\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}jwtid`,\n        withCredentials: true\n      }).then(res => {\n        setUid(res.data);\n      }).catch(err => console.log(\"No token\"));\n    };\n\n    fetchToken();\n    if (uid) dispatch(getUser(uid)); //on met l'id de l'utilisateur dans le store\n  }, [uid, dispatch]);\n  return /*#__PURE__*/_jsxDEV(UidContext.Provider, {\n    value: uid,\n    children: /*#__PURE__*/_jsxDEV(NavigationPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"YzyYvEFqquQrXcJcWepHN8nOQ7U=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ihsaneboubrik/Desktop/L3/S6-2022/LU3IN017/ProjetWeb/cheeky/Client/src/App.js"],"names":["React","useEffect","useState","UidContext","NavigationPanel","axios","useDispatch","getUser","App","uid","setUid","dispatch","fetchToken","method","url","process","env","REACT_APP_API_URL","withCredentials","then","res","data","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,6CAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAeR,QAAQ,CAAC,IAAD,CAA7B,CADiB,CACoB;AACrC;;AAEA,QAAMS,QAAQ,GAAGL,WAAW,EAA5B,CAJiB,CAIgB;;AACjCL,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,UAAU,GAAG,YAAY;AAC/B,YAAMP,KAAK,CAAC;AACXQ,QAAAA,MAAM,EAAE,KADG;AAEXC,QAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,OAF3B;AAGXC,QAAAA,eAAe,EAAE;AAHN,OAAD,CAAL,CAKJC,IALI,CAKEC,GAAD,IAAS;AACfV,QAAAA,MAAM,CAACU,GAAG,CAACC,IAAL,CAAN;AACC,OAPI,EAQJC,KARI,CAQGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,UAAZ,CARX,CAAN;AASC,KAVD;;AAWAb,IAAAA,UAAU;AACV,QAAGH,GAAH,EAAQE,QAAQ,CAACJ,OAAO,CAACE,GAAD,CAAR,CAAR,CAbO,CAagB;AAC/B,GAdQ,EAcP,CAACA,GAAD,EAAME,QAAN,CAdO,CAAT;AAiBA,sBACC,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAIF,GAA9B;AAAA,2BACC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA3BD;;GAAMD,G;UAIYF,W;;;KAJZE,G;AA6BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { UidContext } from './component/AppContext';\nimport NavigationPanel from './component/NavigationPanel';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from './component/Utilitaire/actions/user.actions';\n\nconst App = () => {\n\tconst [uid,setUid] = useState(null); //permet de vérifier l'authentification d'un utilisateur --> token , cookie\n\t//des qu'on arrive sur notre application, a chaque fois qu'on va appeler le components, ca va lancer useEffect qui controle le token de l'utilisateur\n\n\tconst dispatch = useDispatch();  //perme d'envoyer l'action\n\tuseEffect(() => {\n\t\tconst fetchToken = async () => {\n\t\tawait axios({\n\t\t\tmethod: \"get\",\n\t\t\turl: `${process.env.REACT_APP_API_URL}jwtid`,\n\t\t\twithCredentials: true,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\tsetUid(res.data);\n\t\t\t})\n\t\t\t.catch((err) => console.log(\"No token\"));\n\t\t};\n\t\tfetchToken();\n\t\tif(uid) dispatch(getUser(uid)) //on met l'id de l'utilisateur dans le store\n\t},[uid, dispatch]);\n\n\n\treturn (\n\t\t<UidContext.Provider value = {uid}>\n\t\t\t<NavigationPanel />\n\t\t</UidContext.Provider>\n\t);\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}