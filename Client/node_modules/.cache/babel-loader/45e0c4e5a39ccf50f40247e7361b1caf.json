{"ast":null,"code":"import Axios from 'axios';\nexport const getAllUsers = () => {\n  return dispatch => {\n    //dispatch c'est ce qu'on va envoyer au reducer\n    return Axios.get('http://localhost:4000/api/user/').then(res => {\n      dispatch({\n        type: \"All users\",\n        payload: res.data\n      }); //toute la data qu'on vient de chercher, on la passe au reduxer\n    }).catch(err => console.log(err));\n  };\n};\nexport const getUser = () => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('cookie')\n      }\n    };\n    const res = await Axios.get('http://localhost:4000/api/user/', config);\n    dispatch({\n      type: \"User\",\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n\n  ;\n};\nexport const updateBio = bio => {\n  return dispatch => {\n    return Axios('http://localhost:4000/api/user/update', {\n      method: \"PUT\",\n      data: {\n        bio: bio\n      }\n    }).then(res => {\n      dispatch({\n        type: \"Update bio\",\n        payload: bio\n      }); //payload : donnée qu'on envoie dans notre store\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteUser = () => {\n  return dispatch => {\n    return Axios('http://localhost:4000/api/user/delete', {\n      method: \"PUT\"\n    }).then(res => {\n      dispatch({\n        type: \"Delete user\",\n        payload: res.data\n      }); //payload : donnée qu'on envoie dans notre store\n    }).catch(err => console.log(err));\n  };\n};\nexport const followUser = userid => {\n  return dispatch => {\n    return Axios('http://localhost:4000/api/friend/follow', {\n      method: \"PATCH\",\n      data: {\n        userid: userid\n      }\n    }).then(res => {\n      dispatch({\n        type: \"Follow user\",\n        payload: {\n          userid\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const unfollowUser = userid => {\n  return dispatch => {\n    return Axios('http://localhost:4000/api/friend/unfollow', {\n      method: \"PATCH\",\n      data: {\n        userid: userid\n      }\n    }).then(res => {\n      dispatch({\n        type: \"Unfollow user\",\n        payload: {\n          userid\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/Users/macbookair/Desktop/S6/LU3IN017/cheeky/Client/src/component/Utilitaire/reducers/userActions.js"],"names":["Axios","getAllUsers","dispatch","get","then","res","type","payload","data","catch","err","console","log","getUser","config","headers","Authorization","localStorage","getItem","updateBio","bio","method","deleteUser","followUser","userid","unfollowUser"],"mappings":"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","sourcesContent":["import Axios from 'axios';\n\nexport const getAllUsers = () => {\n\treturn(dispatch) => { //dispatch c'est ce qu'on va envoyer au reducer\n\t\treturn Axios.get(\n\t\t\t'http://localhost:4000/api/user/'\n\t\t)\n\t\t.then((res) => {\n\t\t\tdispatch(\n\t\t\t\t{ \n\t\t\t\t\ttype: \"All users\", \n\t\t\t\t\tpayload: res.data \n\t\t\t\t}); //toute la data qu'on vient de chercher, on la passe au reduxer\n\t\t})\n\t\t.catch((err) => console.log( err ));\n\t};\n};\n\nexport const getUser = () => async dispatch => {\n\ttry { \n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + localStorage.getItem('cookie')\n\t\t\t}\n\t\t};\n\n\t\tconst res = await Axios.get('http://localhost:4000/api/user/', config)\n\t\tdispatch({ \n\t\t\ttype: \"User\", \n\t\t\tpayload: res.data \n\t\t}); \n\t}catch(err) {\n\t\tconsole.log( err )\n\t};\n};\n\nexport const updateBio = (bio) => {\n\treturn (dispatch) => {\n\t\treturn Axios(\n\t\t\t'http://localhost:4000/api/user/update',\n\t\t\t{\n\t\t\t\tmethod: \"PUT\",\n\t\t\t\tdata : {\n\t\t\t\t\tbio: bio\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t.then((res) =>{\n\t\t\tdispatch(\n\t\t\t{\n\t\t\t\ttype: \"Update bio\", \n\t\t\t\tpayload: bio\n\t\t\t}) //payload : donnée qu'on envoie dans notre store\n\t\t})\n\t\t.catch((err) => console.log( err ))\n\t};\n};\n\nexport const deleteUser = () => {\n\treturn (dispatch) => {\n\t\treturn Axios(\n\t\t\t'http://localhost:4000/api/user/delete',\n\t\t\t{\n\t\t\t\tmethod: \"PUT\",\n\t\t\t}\n\t\t\t\n\t\t)\n\t\t.then((res) =>{\n\t\t\tdispatch(\n\t\t\t{\n\t\t\t\ttype: \"Delete user\", \n\t\t\t\tpayload: res.data\n\t\t\t}) //payload : donnée qu'on envoie dans notre store\n\t\t})\n\t\t.catch((err) => console.log( err ))\n\t};\n}\n\nexport const followUser = (userid) => {\n\treturn (dispatch) => {\n\t\treturn Axios(\n\t\t \t'http://localhost:4000/api/friend/follow',\n\t\t \t{\n\t\t \t\tmethod: \"PATCH\",\n\t\t \t\tdata: {\n\t\t\t\t\tuserid: userid\n\t\t\t\t}\n\t\t \t}\n\t\t)\n\t\t.then((res) => {\n\t\t\tdispatch(\n\t\t\t\t{ \n\t\t\t\t\ttype: \"Follow user\", \n\t\t\t\t\tpayload: { userid }\n\t\t\t\t});\n\t\t})\n\t\t.catch((err) => console.log( err ));\n  \t};\n};\n\nexport const unfollowUser = (userid) => {\n\treturn (dispatch) => {\n\t\treturn Axios(\n\t\t\t'http://localhost:4000/api/friend/unfollow',\n\t\t\t{\n\t\t \t\tmethod: \"PATCH\",\n\t\t \t\tdata: {\n\t\t\t\t\tuserid: userid\n\t\t\t\t}\n\t\t \t}\n\t\t)\n\t\t.then((res) => {\n\t\t\tdispatch(\n\t\t\t\t{ \n\t\t\t\t\ttype: \"Unfollow user\", \n\t\t\t\t\tpayload: { userid } \n\t\t\t\t});\n\t\t})\n\t  .catch((err) => console.log( err ));\n  };\n};"]},"metadata":{},"sourceType":"module"}